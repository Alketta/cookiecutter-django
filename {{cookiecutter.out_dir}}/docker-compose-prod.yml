version: '3.7'
x-{{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
  volumes:
  - ./src/{{cookiecutter.django_settings.replace('.', '/')}}:/code/src/{{cookiecutter.django_settings.replace('.', '/')}}/
  - ./local.py:/code/src/{{cookiecutter.django_settings.replace('.', '/')}}/local.py
  image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}"
services:
  nginx:
    restart: unless-stopped
    ports:
    - 80:80
  {{cookiecutter.app_type}}:
    restart: unless-stopped
    <<: [ *{{cookiecutter.app_type}} ]
    ports:
    - "8000:8000"
  {% if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
    restart: unless-stopped
  {%- endif%}
  mailcatcher:
    restart: unless-stopped
{% if cookiecutter.cache_system%}  {{cookiecutter.cache_system}}:
    restart: unless-stopped
{%endif%}
  db:
    restart: unless-stopped
  backup:
    restart: unless-stopped
    env_file: [.env, docker.env]
    image: "{{cookiecutter.dbsmartbackup_image}}"
    volumes:
      - backupdb-dumps:/var/db_smart_backup/
      - backupdb-logs:/var/db_smart_backup/logs/
    restart: unless-stopped
{% if cookiecutter.with_celery %}  celery-broker:
  celery-beat: &celery
    <<: [ *{{cookiecutter.app_type}} ]
    restart: unless-stopped
  celery-worker:
    <<: [ *{{cookiecutter.app_type}} ]
    restart: unless-stopped
{% endif -%}
{% if cookiecutter.db_mode == 'postgres' %}  setup-postgres:
    restart: unless-stopped
{% endif %}
volumes:
  backupdb-logs:
  backupdb-dumps:
