version: '{{cookiecutter.compose_version}}'
x-images:
  x-log: &log
    depends_on: [log]
    logging: {driver: syslog, options: {tag: '{{'{{'}}index .ContainerLabels "com.docker.compose.service"}}', syslog-address: "tcp://${SYSLOG_ADDRESS:-127.0.0.1}:${SYSLOG_PORT:-{{cookiecutter.syslog_port}}}"}}
  x-restart: &restart
    restart: unless-stopped
  x-{{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
    <<: [ *restart ]
    image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}"
    volumes:
    - logs:/logs
{%- if not cookiecutter.no_local_volumes %}
    - ./local.py:/code/src/{{cookiecutter.django_settings.replace('.', '/')}}/local.py
{%- endif %}
services:
  log:
    <<: [ *restart ]
    volumes: [logs:/var/log]
    ports: ["${SYSLOG_ADDRESS:-127.0.0.1}:${SYSLOG_PORT:-{{cookiecutter.syslog_port}}}:10514"]
{%- if cookiecutter.with_ftp %}
{%- if cookiecutter.with_ftp in ['ftp']%}
  ftp-int:
    <<: [ *restart, *log ]
{%- endif%}
  ftp:
    <<: [ *restart, *log ]
{%- endif %}
  nginx:
    <<: [ *restart, *log ]
    ports:
    - "${DJANGO__HTTP_LISTEN:-0.0.0.0}:${DJANGO__HTTP_PORT:-80}:80"
  {{cookiecutter.app_type}}:
    <<: [ *{{cookiecutter.app_type}} ]
    ports:
    - "${DJANGO__API_LISTEN:-127.0.0.1}:${DJANGO__API_PORT:-8000}:8000"
{%- if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
{%- endif%}
  mailcatcher:
    <<: [ *restart, *log ]
{%- if cookiecutter.cache_system%}
  {{cookiecutter.cache_system}}:
    <<: [ *restart, *log ]
{% endif%}
  db:
    <<: [ *restart, *log ]
  backup:
    <<: [ *restart, *log ]
    volumes:
    - backupdb-dumps:/var/db_smart_backup
{%- if cookiecutter.with_celery %}
  celery-broker:
    <<: [ *restart, *log ]
  celery-beat: &celery
    <<: [ *{{cookiecutter.app_type}} ]
  celery-worker:
    <<: [ *{{cookiecutter.app_type}} ]
{%- endif %}
volumes:
  backupdb-dumps:
  logs:
