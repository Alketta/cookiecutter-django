; NOTE :
; --parallel option is available only since Django 1.9

[tox]
minversion = 2.3
envlist =
    tests
    coverage
    linting
skipsdist = true

[testenv]
usedevelop = true
changedir=src/
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
whitelist_externals = /bin/sh
setenv =
    DJANGO_SETTINGS_MODULE={{cookiecutter.django_project_name}}.settings.test
    COVERAGE_FILE={envdir}/coverage_report
    DB_USER={env:POSTGRES_USER:user}
    DB_PASSWORD={env:POSTGRES_PASSWORD:password}
    DB_NAME={env:POSTGRES_DB:db}
    DB_HOST={env:POSTGRES_HOST:db}
    MYSQL_USER={env:POSTGRES_USER:user}
    MYSQL_PASSWORD={env:POSTGRES_PASSWORD:password}
    MYSQL_DATABASE={env:POSTGRES_DB:db}
    MYSQL_HOST={env:POSTGRES_HOST:db}
    POSTGRES_USER={env:POSTGRES_USER:user}
    POSTGRES_PASSWORD={env:POSTGRES_PASSWORD:password}
    POSTGRES_DB={env:POSTGRES_DB:db}
    POSTGRES_HOST={env:POSTGRES_HOST:db}
    PROJECT_DIR={env:PROJECT_DIR:{{cookiecutter.django_project_name}}/}
    PROJECT_PACKAGE={env:PROJECT_PACKAGE:{{cookiecutter.django_project_name}}}

[testenv:tests]
commands =
    coverage erase
    python manage.py compilemessages
    python manage.py test --parallel --noinput
    python manage.py test --reverse --parallel --noinput

[testenv:coverage]
commands =
    coverage erase
    python manage.py compilemessages
    sh -c 'coverage run --source=. manage.py test --noinput'
    coverage report

[testenv:linting]
commands =
    pylama -o ../tox.ini
    isort -c -rc --quiet

[pylama]
skip = */migrations/*,*/settings/*
ignore = W0401,C901

[pep8]
max_line_length = 120

[pylama:pep8]
max_line_length = 120

[pylama:pycodestyle]
max_line_length = 120

[flake8]
exclude = docs
max-line-length = 120
