{%- set db_tag = 'post' in cookiecutter.db_mode and 'postgres' or cookiecutter.db_mode %}
version: '{{cookiecutter.compose_version}}'
x-images:
  env: &env
    env_file: [.env, docker.env]
    environment: &env_vars
{%- if cookiecutter.with_celery -%}
{%- if cookiecutter.celery_broker == 'rabbitmq' %}
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER:-admin}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS:-mypass}"
{%- endif %}
{%- endif %}
{%- if cookiecutter.cache_system%}
{%-  if cookiecutter.cache_system == 'redis' %}
      REDIS_URL: "${REDIS_URL:-redis://redis:6379/1}"
{%- elif cookiecutter.cache_system == 'memcached' %}
      MEMCACHED_URL: "${MEMCACHED_URL:-memcached:11211}"
{%- else %}
      {{cookiecutter.cache_system.upper()}}_URL: "${{'{'}}{{cookiecutter.cache_system.upper()}}_URL:-{{cookiecutter.cache_system}}{{'}'}}"
{%- endif%}
{%- endif%}
      DB_MODE: "${DB_MODE:-{{cookiecutter.db_mode}}}"
{%- if 'post' in cookiecutter.db_mode %}
      POSTGRES_HAS_POSTGIS: "{% if cookiecutter.with_postgist_test and 'gis' in cookiecutter.db_mode%}1{%endif%}"
      POSTGRES_HOST: "${POSTGRES_HOST:-db}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      POSTGRES_DB: "${POSTGRES_DB:-db}"
      POSTGRES_USER: "${POSTGRES_USER:-user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
      PGPASSWD: "${POSTGRES_PASSWORD:-password}"
      PGPASSWORD: "${POSTGRES_PASSWORD:-password}"
{%- elif 'mysql' in cookiecutter.db_mode %}
      MYSQL_HOST: "${MYSQL_HOST:-db}"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-db}"
      MYSQL_USER: "${MYSQL_USER:-user}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-password}"
{%- else %}
      DB_HOST: "${DB_HOST:-db}"
      DB_PORT: "${DB_PORT:-5432}"
      DB_NAME: "${DB_NAME;-db}"
      DB_USER: "${DB_USER:-user}"
      DB_PASSWORD: "${DB_PASSWORD:-password}"
{%- endif %}
      DJANGO__USER_UID: "${DJANGO__USER_UID:-1000}"
      DJANGO_WSGI: "${DJANGO_WSGI:-{{cookiecutter.django_project_name}}.wsgi}"
      GUNICORN_CLASS: "${GUNICORN_CLASS:-{{cookiecutter.gunicorn_class}}}"
{%- if cookiecutter.with_celery %}
      DJANGO_CELERY: "${DJANGO_CELERY:-{{cookiecutter.django_project_name}}.celery:app}"
      DJANGO_CELERY_BROKER: "${DJANGO_CELERY_BROKER:-{{cookiecutter.celery_broker}}}"
      DJANGO_CELERY_HOST: "${DJANGO_CELERY_HOST:-celery-broker}"
{%- endif %}
{%- if cookiecutter.with_ftp %}
      DJANGO__FTP_USER: "${DJANGO__FTP_USER:-ftp}"
      DJANGO__FTP_PASSWORD: "${DJANGO__FTP_PASSWORD:-secret1324510}"
      DJANGO__FTP_PORT: "${DJANGO__FTP_PORT:-{{cookiecutter.ftp_port_range_start|int -1 }}}"
{%- if cookiecutter.with_ftp in ['ftp'] %}
      FTP_USER_HOME: "${DJANGO__FTP_ROOT:-/ftp}"
      FTP_USER_NAME: "${DJANGO__FTP_USER:-ftp}"
      FTP_USER_PASS: "${DJANGO__FTP_PASSWORD:-secret1324510}"
      FTP_USER_UID: "${DJANGO__USER_UID:-1000}"
{%- endif %}
{%- endif %}
      MAILCATCHER_USER: "${MAILCATCHER_USER:-mailcatcher}"
      MAILCATCHER_PASSWORD: "${MAILCATCHER_PASSWORD:-mailcatcher}"
{%- if cookiecutter.with_celery %}
      CELERY_SCHEDULER: "${CELERY_SCHEDULER:-django_celery_beat.schedulers:DatabaseScheduler}"
{%- endif %}
  {{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
    <<: [ *env ]
    ipc: "service:{{cookiecutter.app_type}}"
    tty: true
    # latest image is only used in prod (without dev & test tools)
    image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}-dev"
    environment: &django_env
      <<: [ *env_vars ]
      PROJECT_DIR: "${PROJECT_DIR:-/code/src/{{cookiecutter.django_project_name}}/}"
      PROJECT_PACKAGE: "${PROJECT_PACKAGE:-{{cookiecutter.django_project_name}}}"
      EXTRA_USER_DIRS: "{% if cookiecutter.with_ftp%}${DJANGO__FTP_ROOT:-/ftp}{%endif%}"
    depends_on:
    - db
{%- if cookiecutter.cache_system%}
    - "{{cookiecutter.cache_system}}"
{%-endif%}
    volumes:
{#- KEEP IN SYNC WITH -dev equivalent block, nginx, cron #}
{%- macro django_volumes() %}
{%- if not cookiecutter.no_local_volumes %}
    - ./sys/scripts:/code/sys/scripts
{%- if not cookiecutter.remove_cron %}
    - ./sys/etc/cron.d:/code/sys/etc/cron.d
{%- endif %}
    - ./sys/etc/logrotate.d:/code/sys/etc/logrotate.d
    - ./src/{{cookiecutter.django_settings.replace('.', '/')}}/instances:/code/src/{{cookiecutter.django_settings.replace('.', '/')}}/instances
{%- endif %}
{%- endmacro %}
{%- macro django_assets() %}
    - "${DATA_VOLUME:-./data}:/code/data"
    - mediafiles:/code/public/media
    - statics:/code/public/static
    - privatefiles:/code/private
    - docs:/code/outdocs
{%- if cookiecutter.with_ftp %}
    - "ftp-root:${DJANGO__FTP_ROOT:-/ftp}"
{%- endif %}
{%- endmacro %}
{{- django_volumes() }}
{{- django_assets() }}
{%- if cookiecutter.with_ftp %}
  ftp: &ftp
    <<: [ *env ]
    image: {{ cookiecutter.with_ftp in ['ssh'] and 'corpusops/sshd' or 'corpusops/pureftpd' }}
    environment: &ftp_env
      <<: [ *env_vars ]
      {% if cookiecutter.with_ftp in ['ftp'] %}
      FTP_MAX_CONNECTIONS: 50
      FTP_MAX_CLIENTS: 50{%endif%}
{%- endif %}
services:
  log:
    <<: [ *env ]
    image: "{{cookiecutter.rsyslog_image}}"
{%- if cookiecutter.with_ftp %}
{%- if cookiecutter.with_ftp in ['ftp']%}
# has only to be reachable from within the docker network (no passive mode !)
  ftp-int:
    <<: [ *ftp ]
    environment:
      <<: [ *ftp_env ]
      PUBLICHOST: "${DJANGO__FTP_INTERNAL_PUBLICHOST-}"
      NO_PASSIVE_MODE: "1"
    volumes:
    - "ftp-root:${DJANGO__FTP_ROOT:-/ftp}"
    - ftp-pw:/etc/pure-ftpd/passwd
    - ftp-ssl:/etc/ssl/private
{%- if cookiecutter.with_ftp in ['ftp']%}
  ftp:
    <<: [ *ftp ]
    environment:
      <<: [ *ftp_env ]
      FTP_PASSIVE_PORTS: "${DJANGO__FTP_PORT_RANGE:-{{cookiecutter.ftp_port_range}}}"
      PUBLICHOST: "${DJANGO__FTP_PUBLICHOST-}"
    ports:
    - "${DJANGO__FTP_LISTEN:-0.0.0.0}:${DJANGO__FTP_PORT:-21}:21"
    - "${DJANGO__FTP_LISTEN:-0.0.0.0}:${DJANGO__FTP_PORT_RANGE:-{{cookiecutter.ftp_port_range.replace(':', '-')}}}:${DJANGO__FTP_PORT_RANGE:-{{cookiecutter.ftp_port_range.replace(':', '-')}}}"
    volumes:
    - "ftp-root:${DJANGO__FTP_ROOT:-/ftp}"
    - ftp-pw:/etc/pure-ftpd/passwd
    - ftp-ssl:/etc/ssl/private
{%- elif cookiecutter.with_ftp in ['ssh']%}
  ftp:
    <<: [ *ftp ]
    environment:
      <<: [ *ftp_env ]
      SFTP_MODE: "${SFTP_MODE:-true}"
      SFTP_CHROOT: "${SFTP_CHROOT:-true}"
      SSH_USERS: "${DJANGO__FTP_USER:-ftp}:${DJANGO__USER_UID:-1000}::${DJANGO__FTP_PASSWORD:-secret1324510}"
    ports:
    - "${DJANGO__FTP_LISTEN:-0.0.0.0}:${DJANGO__FTP_PORT:-{{cookiecutter.ftp_port_range_start|int -1}}}:22"
    volumes:
    - "ftp-root:${DJANGO__SFTP_ROOT:-/home/ftp}"
{%- endif %}
{%- endif %}
{%- endif %}
  mailcatcher:
    <<: [ *env ]
    image: "{{cookiecutter.mailhog_image}}"
    hostname: "mailcatcher"
    volumes: ["mails:/mails"]
{%- if cookiecutter.cache_system%}
  {{cookiecutter.cache_system}}:
    <<: [ *env ]
    image: "{{cookiecutter.cache_image}}"
    hostname: {{cookiecutter.cache_system}}
{%- if cookiecutter.cache_system in ['redis'] %}
    volumes:
    - 'redis:/data'
{%- endif %}
{%- endif %}
  db:
    <<: [ *env ]
    image: "{{cookiecutter["{0}_image".format(cookiecutter.db_mode)]}}"
    volumes:
    - postgresql:/var/lib/postgresql/data
  backup:
    <<: [ *env ]
    image: "{{cookiecutter.dbsmartbackup_image}}"
  nginx:
    <<: [ *env ]
    image: "{{cookiecutter.nginx_image}}"
    depends_on:
    - {{cookiecutter.app_type}}
    volumes:
{{- django_assets() }}
    - ./sys/etc/nginx/vhost.conf.template:/etc/nginx/conf.d/default.conf.template
    - nginx-certs:/certs
    - nginx-htpasswd:/etc/htpasswd
    # retrocompat
    - mediafiles:/public/media/:ro
    - statics:/public/static
  {{cookiecutter.app_type}}:
    <<: [ *{{cookiecutter.app_type}} ]
    ipc: shareable
{%- if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
    environment:
      <<: [ *django_env ]
      IMAGE_MODE: cron
    depends_on:
    - {{cookiecutter.app_type}}
    volumes:
{{- django_volumes() }}
{{- django_assets() }}
{%- endif%}
{%- if cookiecutter.with_celery %}
  celery-broker:
    <<: [ *env ]
    image: "{{cookiecutter['{0}_image'.format(cookiecutter.celery_broker)]}}"
    hostname: "{{cookiecutter.celery_broker}}"
    {% if cookiecutter.celery_broker in ['redis', 'rabbitmq'] -%}
    volumes:
    - celery{{cookiecutter.celery_broker}}:{% if cookiecutter.celery_broker in ['rabbitmq']%}/var/lib/{{cookiecutter.celery_broker}}{%else%}/data{%endif%}:rw
    {%- endif %}
  celery-beat: &celery
    <<: [ *{{cookiecutter.app_type}} ]
    environment:
      <<: [ *django_env ]
      IMAGE_MODE: celery_beat
    depends_on: [db, celery-broker, {{cookiecutter.app_type}}]
  celery-worker:
    <<: [ *celery ]
    environment:
      <<: [ *django_env ]
      IMAGE_MODE: celery_worker
    depends_on: [{{cookiecutter.app_type}}]
{%- endif %}
volumes:
  docs:
  postgresql:
{%- if cookiecutter.cache_system in ['redis']%}
  {{cookiecutter.cache_system}}:
{%- endif%}
  nginx-htpasswd:
  nginx-certs:
  mediafiles:
  privatefiles:
  statics:
  mails:
{%- if cookiecutter.with_celery%}
  celery{{cookiecutter.celery_broker}}:
{%- endif%}
{%- if cookiecutter.with_ftp %}
  ftp-root:
{%- if cookiecutter.with_ftp in ['ftp'] %}
  ftp-pw:
  ftp-ssl:
{%- endif %}
{%- endif %}
